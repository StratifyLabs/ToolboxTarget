
set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR arm)
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM BOTH)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

set(TOOLCHAIN_BIN_DIR "${TARGET_TOOLCHAIN_DIR}/bin" CACHE INTERNAL "GCC TOOLCHAIN BINARY DIR")
set(TOOLCHAIN_INC_DIR "${TARGET_TOOLCHAIN_DIR}/${TARGET_TOOLCHAIN_HOST_PREFIX}/include" CACHE INTERNAL "GCC TOOLCHAIN INCLUDE DIR")
set(TOOLCHAIN_LIB_DIR "${TARGET_TOOLCHAIN_DIR}/${TARGET_TOOLCHAIN_HOST_PREFIX}/lib" CACHE INTERNAL "GCC TOOLCHAIN LIBRARY DIR")

set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)
set(CMAKE_C_COMPILER ${TOOLCHAIN_BIN_DIR}/${TARGET_TOOLCHAIN_HOST_PREFIX}gcc${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "GCC TOOLCHAIN C COMPILER")
set(CMAKE_CXX_COMPILER ${TOOLCHAIN_BIN_DIR}/${TARGET_TOOLCHAIN_HOST_PREFIX}g++${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "GCC TOOLCHAIN C++ COMPILER")
set(CMAKE_ASM_COMPILER ${TOOLCHAIN_BIN_DIR}/${TARGET_TOOLCHAIN_HOST_PREFIX}g++${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "GCC TOOLCHAIN ASM COMPILER")
set(CMAKE_AR ${TOOLCHAIN_BIN_DIR}/${TARGET_TOOLCHAIN_HOST_PREFIX}gcc-ar${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "GCC TOOLCHAIN AR")
set(CMAKE_RANLIB ${TOOLCHAIN_BIN_DIR}/${TARGET_TOOLCHAIN_HOST_PREFIX}gcc-ranlib${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "GCC TOOLCHAIN RANLIB")
set(CMAKE_NM ${TOOLCHAIN_BIN_DIR}/${TARGET_TOOLCHAIN_HOST_PREFIX}gcc-nm${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "GCC TOOLCHAIN NM")
set(CMAKE_OBJCOPY ${TOOLCHAIN_BIN_DIR}/${TARGET_TOOLCHAIN_HOST_PREFIX}objcopy${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "GCC TOOLCHAIN OBJCOPY")
set(CMAKE_OBJDUMP ${TOOLCHAIN_BIN_DIR}/${TARGET_TOOLCHAIN_HOST_PREFIX}objdump${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "GCC TOOLCHAIN OBJDUMP")
set(CMAKE_SIZE ${TOOLCHAIN_BIN_DIR}/${TARGET_TOOLCHAIN_HOST_PREFIX}size${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "GCC TOOLCHAIN SIZE")
set(CMAKE_INSTALL_PREFIX ${TOOLCHAIN_DIR}/${TARGET_TOOLCHAIN_HOST_PREFIX} CACHE INTERNAL "GCC TOOLCHAIN INSTALL PREFIX")

set(TARGET_BUILD_FLAGS "" CACHE STRING "Additional C Flags for building a target")
set(TARGET_BUILD_C_FLAGS "-Wall -mthumb -ffunction-sections -fdata-sections -fomit-frame-pointer" CACHE STRING "C Flags for building (must be overriden using the command line)")
set(TARGET_BUILD_ASM_FLAGS "-mthumb" CACHE STRING "ASM build flags")

set(CMAKE_C_FLAGS "${TARGET_BUILD_C_FLAGS}" CACHE INTERNAL "CMAKE C FLAGS BSP")
set(CMAKE_ASM_FLAGS "${TOOLCHAIN_ASM_FLAGS}" CACHE INTERNAL "CMAKE ASM FLAGS BSP")
